#!/usr/bin/perl

use v5.12;
use warnings;

use List::Util;

=head1 NAME

rps - ROCK PAPER SCISSORS - you know, for ELVES

=cut

use constant {
    AttackRock => 'A',
    AttackPapr => 'B',
    AttackScis => 'C',
    CountrRock => 'X',
    CountrPapr => 'Y',
    CountrScis => 'Z',
    Lose => 'X',
    Draw => 'Y',
    Win  => 'Z',
};

my %SCORES = (
    AttackRock, {
        CountrRock, 1 + 3,
        CountrPapr, 2 + 6,
        CountrScis, 3 + 0,
    },
    AttackPapr, {
        CountrRock, 1 + 0,
        CountrPapr, 2 + 3,
        CountrScis, 3 + 6,
    },
    AttackScis, {
        CountrRock, 1 + 6,
        CountrPapr, 2 + 0,
        CountrScis, 3 + 3,
    },
    );

my %HOWTO = (
    AttackRock, {
        Lose, CountrScis,
        Draw, CountrRock,
        Win,  CountrPapr,
    },
    AttackPapr, {
        Lose, CountrRock,
        Draw, CountrPapr,
        Win,  CountrScis,
    },
    AttackScis, {
        Lose, CountrPapr,
        Draw, CountrScis,
        Win,  CountrRock,
    },
    );

sub strategy_guide {
    [ map { [ split ] } @_ ]
}

sub score_round {
    my $attack = shift;
    my $countr = shift;
    $SCORES{$attack}->{$countr}
}

sub choose_countr {
    my $attack = shift;
    my $result = shift;
    $HOWTO{$attack}->{$result}
}

sub main {
    my $g = strategy_guide(<>);
    my $total = 0;
    for my $round (@$g) {
        my ($attack, $countr) = @$round;
        my $score = score_round($attack, $countr);
        $total += $score;
        say("$attack vs. $countr => ", $score);
    }
    say("total $total");
    0
}

if (!caller) {
    exit(main(@ARGV))
}

1;
